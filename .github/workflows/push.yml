name: test services

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      IMAGE_NAME: "${{ env.IMAGE_NAME }}"
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lowercase tag
        run: echo "IMAGE_NAME=ghcr.io/${GITHUB_REPOSITORY,,}:latest" >>${GITHUB_ENV}
      - uses: docker/build-push-action@v4
        id: build
        with:
          context: .
          push: true
          tags: "${{ env.IMAGE_NAME }}"

  test-linux-container:
    runs-on: ubuntu-latest
    needs: build
    container:
        image: "${{ needs.build.outputs.IMAGE_NAME }}"
        options: --entrypoint /bin/bash
    services:
      nginx:
        image: "nginx:latest"
      other:
        image: "${{ needs.build.outputs.IMAGE_NAME }}"
    steps:
      - run: curl -sI http://nginx

  test-linux-host:
    runs-on: ubuntu-latest
    needs: build
    services:
      nginx:
        image: "nginx:latest"
        ports:
          - "80:80"
      other:
        image: "${{ needs.build.outputs.IMAGE_NAME }}"
    steps:
      - run: sudo apt-get -qq update && sudo apt-get -yqq install curl
      - run: curl -sI http://localhost

  test-linux-docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - run: docker network create test
      - uses: ./.github/actions/docker-run-action
        with:
          image: "nginx:latest"
          args: "-p 80:80 --network=test --name nginx"
      - run: docker run --rm --network=test curlimages/curl:latest -sI http://nginx
      - run: docker run --rm --network=host curlimages/curl:latest -sI http://localhost

  test-windows-docker:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - run: docker network create test
      - uses: ./.github/actions/docker-run-action
        with:
          image: "nginx:latest"
          args: "--platform=linux -p 80:80 --network=test"
      - run: docker run --rm --network=test curlimages/curl:latest -sI http://nginx
      - run: docker run --rm --network=host curlimages/curl:latest -sI http://localhost

  test-macos-docker:
    runs-on: macos-latest
    needs: build
    steps:
      - run: brew update && brew install docker colima
      - run: colima delete && colima start --verbose
      - name: colima logs
        if: failure()
        run: |
          echo "::group::~/.lima/colima/serial*.log"
          cat /Users/runner/.lima/colima/serial*.log
          echo "::endgroup::"
          echo "::group::~/.lima/colima/ha.stderr.log"
          cat /Users/runner/.lima/colima/ha.stderr.log
          echo "::endgroup::"
      - uses: actions/checkout@v3
      - run: docker network create test
      - uses: ./.github/actions/docker-run-action
        with:
          image: "nginx:latest"
          args: "-p 80:80 --network=test --name nginx"
      - run: docker run --rm --network=test curlimages/curl:latest -sI http://nginx
      - run: docker run --rm --network=host curlimages/curl:latest -sI http://localhost
